package main

import (
	"strings"
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestGetEdge(t *testing.T) {
	input := "..##.#..#."
	got := getEdge(input)
	want := int64(210)
	assert.Equal(t, want, got)
}

func TestParseTile(t *testing.T) {
	input := `
Tile 2311:
..##.#..#.
##..#.....
#...##..#.
####.#...#
##.##.###.
##...#.###
.#.#.#..##
..#....#..
###...#.#.
..###..###
	`
	input = strings.TrimSpace(input)

	got := parseTile(input)
	want := &tile{
		id: 2311,
		content: [][]rune{
			{'.', '.', '#', '#', '.', '#', '.', '.', '#', '.'},
			{'#', '#', '.', '.', '#', '.', '.', '.', '.', '.'},
			{'#', '.', '.', '.', '#', '#', '.', '.', '#', '.'},
			{'#', '#', '#', '#', '.', '#', '.', '.', '.', '#'},
			{'#', '#', '.', '#', '#', '.', '#', '#', '#', '.'},
			{'#', '#', '.', '.', '.', '#', '.', '#', '#', '#'},
			{'.', '#', '.', '#', '.', '#', '.', '.', '#', '#'},
			{'.', '.', '#', '.', '.', '.', '.', '#', '.', '.'},
			{'#', '#', '#', '.', '.', '.', '#', '.', '#', '.'},
			{'.', '.', '#', '#', '#', '.', '.', '#', '#', '#'},
		},
		edges: []int64{498, 318, 231, 924, 89, 616, 210, 300},
	}

	assert.Equal(t, want, got)
}

func TestIsNeighbor(t *testing.T) {
	leftEdge := []int64{1, 2, 3, 4}
	rightEdge := []int64{2, 4, 5, 6}

	got := isNeighbor(leftEdge, rightEdge)

	assert.True(t, got)
}

func TestExample(t *testing.T) {
	input := `
Tile 2311:
..##.#..#.
##..#.....
#...##..#.
####.#...#
##.##.###.
##...#.###
.#.#.#..##
..#....#..
###...#.#.
..###..###

Tile 1951:
#.##...##.
#.####...#
.....#..##
#...######
.##.#....#
.###.#####
###.##.##.
.###....#.
..#.#..#.#
#...##.#..

Tile 1171:
####...##.
#..##.#..#
##.#..#.#.
.###.####.
..###.####
.##....##.
.#...####.
#.##.####.
####..#...
.....##...

Tile 1427:
###.##.#..
.#..#.##..
.#.##.#..#
#.#.#.##.#
....#...##
...##..##.
...#.#####
.#.####.#.
..#..###.#
..##.#..#.

Tile 1489:
##.#.#....
..##...#..
.##..##...
..#...#...
#####...#.
#..#.#.#.#
...#.#.#..
##.#...##.
..##.##.##
###.##.#..

Tile 2473:
#....####.
#..#.##...
#.##..#...
######.#.#
.#...#.#.#
.#########
.###.#..#.
########.#
##...##.#.
..###.#.#.

Tile 2971:
..#.#....#
#...###...
#.#.###...
##.##..#..
.#####..##
.#..####.#
#..#.#..#.
..####.###
..#.#.###.
...#.#.#.#

Tile 2729:
...#.#.#.#
####.#....
..#.#.....
....#..#.#
.##..##.#.
.#.####...
####.#.#..
##.####...
##..#.##..
#.##...##.

Tile 3079:
#.#.#####.
.#..######
..#.......
######....
####.#..#.
.#...#.##.
#.#####.##
..#.###...
..#.......
..#.###...
	`
	input = strings.TrimSpace(input)

	got := runExample(input)

	want := 20899048083289

	assert.Equal(t, want, got)
}
